[General]
# HZP scan strategy, possible values are "classic", "inplace". Default is "classic"
hp_scan_strategy=inplace
hazard_pointer_count=72
#hp_max_thread_count=32
#hp_retired_ptr_count=256

# cds::gc::DHP initialization parameters
dhp_init_guard_count=16

# cds::urcu::gc initialization parameters
rcu_buffer_size=256


[Stack_Push]
ThreadCount=4
StackSize=2000000
EliminationSize=4

[Stack_PushPop]
PushThreadCount=3
PopThreadCount=3
StackSize=6000000
EliminationSize=4

[IntrusiveStack_PushPop]
PushThreadCount=3
PopThreadCount=3
StackSize=6000000
EliminationSize=4
# Flat combining stack parameters
# FCIterate=1 - the test will be run iteratively
#   for combine pass count from 1 to FCCombinePassCount
#   and compact factor from 1 to FCCompactFactor
# FCIterate=0 - the test runs only once for giving
#   FCCombinePassCount and FCCompactFactor
FCIterate=0
FCCombinePassCount=8
FCCompactFactor=64

[queue_push]
ThreadCount=4
QueueSize=5000000
# SegmentedQueue parameters:
# SegmentedQueue_Iterate: 
#    1 - run test iteratively for segment size from 4 up to SegmentedQueue_SegmentSize
#    0 - run test for segment size equal to SegmentedQueue_SegmentSize
SegmentedQueue_Iterate=0
SegmentedQueue_SegmentSize=256

[queue_pop]
ThreadCount=4
QueueSize=5000000
# SegmentedQueue parameters:
# SegmentedQueue_Iterate: 
#    1 - run test iteratively for segment size from 4 up to SegmentedQueue_SegmentSize
#    0 - run test for segment size equal to SegmentedQueue_SegmentSize
SegmentedQueue_Iterate=0
SegmentedQueue_SegmentSize=256

[queue_push_pop]
ConsumerCount=2
ProducerCount=2
QueueSize=5000000
# HeavyValueSize - size of value for flat cobining containers, default 100
# HeavyValueSize=100
# SegmentedQueue parameters:
# SegmentedQueue_Iterate: 
#    1 - run test iteratively for segment size from 4 up to SegmentedQueue_SegmentSize
#    0 - run test for segment size equal to SegmentedQueue_SegmentSize
SegmentedQueue_Iterate=0
SegmentedQueue_SegmentSize=256

[queue_random]
ThreadCount=4
QueueSize=5000000
# SegmentedQueue parameters:
# SegmentedQueue_Iterate: 
#    1 - run test iteratively for segment size from 4 up to SegmentedQueue_SegmentSize
#    0 - run test for segment size equal to SegmentedQueue_SegmentSize
SegmentedQueue_Iterate=0
SegmentedQueue_SegmentSize=256

[intrusive_queue_push_pop]
ReaderCount=2
WriterCount=2
QueueSize=5000000
# Flat combining queue parameters
FCCompactFactor=64
FCPassCount=8
# SegmentedQueue parameters:
# SegmentedQueue_Iterate: 
#    1 - run test iteratively for segment size from 4 up to SegmentedQueue_SegmentSize
#    0 - run test for segment size equal to SegmentedQueue_SegmentSize
SegmentedQueue_Iterate=0
SegmentedQueue_SegmentSize=256

[bounded_queue_fulness]
ThreadCount=6
QueueSize=1024
PassCount=1000000

[spsc_queue]
QueueSize=1024
PassCount=100000

[spsc_buffer]
BufferSize=1000000
PushCount=1000000

[pqueue_pop]
ThreadCount=4
QueueSize=2000000

[pqueue_push]
ThreadCount=4
QueueSize=2000000

[pqueue_push_pop]
PushThreadCount=2
PopThreadCount=2
QueueSize=2000000

[map_find_string]
ThreadCount=4
MapSize=50000
PercentExists=50
PassCount=4
MaxLoadFactor=4

# *** Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0

# *** FeldmanHashMap properties
FeldmanMapHeadBits=8
FeldmanMapArrayBits=8

[map_insdel_func]
InsertThreadCount=2
DeleteThreadCount=2
UpdateThreadCount=2
ThreadPassCount=4
MapSize=100000
MaxLoadFactor=4

# *** Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0

# *** FeldmanHashMap properties
FeldmanMapHeadBits=8
FeldmanMapArrayBits=8

[map_insdel_item_int]
InsertThreadCount=2
DeleteThreadCount=2
MapSize=10000
GoalItem=5000
AttemptCount=1000
MaxLoadFactor=4

# *** Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0
# *** FeldmanHashMap properties
FeldmanMapHeadBits=8
FeldmanMapArrayBits=8

[map_insdel_string]
InsertThreadCount=2
DeleteThreadCount=2
ThreadPassCount=8
MapSize=10000
MaxLoadFactor=4

# *** Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0

# *** FeldmanHashMap properties
FeldmanMapHeadBits=8
FeldmanMapArrayBits=8

[map_insdelfind]
InitialMapSize=50000
ThreadCount=4
MaxLoadFactor=4
InsertPercentage=20
DeletePercentage=20
Duration=5

# *** Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0

# *** FeldmanHashMap properties
FeldmanMapHeadBits=8
FeldmanMapArrayBits=8

[map_delodd]
MapSize=10000
InsThreadCount=2
DelThreadCount=2
ExtractThreadCount=2
FindThreadCount=2
MaxLoadFactor=4
PassCount=100

#Cuckoo map properties
CuckooInitialSize=1024
CuckooProbesetSize=16
# 0 - use default
CuckooProbesetThreshold=0

# *** FeldmanHashMap properties
FeldmanMapHeadBits=8
FeldmanMapArrayBits=8

[map_minmax]
MapSize=50000
InsThreadCount=2
ExtractThreadCount=2
PassCount=1000

# *** FeldmanHashMap properties
FeldmanMapHeadBits=8
FeldmanMapArrayBits=8

[map_iter_erase]
MapSize=5000
InsThreadCount=2
DelThreadCount=2
ExtractThreadCount=2
FindThreadCount=2
MaxLoadFactor=4
PassCount=1000

# *** FeldmanHashMap properties
FeldmanMapHeadBits=8
FeldmanMapArrayBits=8


[free_list]
ThreadCount=4
PassCount=1000000